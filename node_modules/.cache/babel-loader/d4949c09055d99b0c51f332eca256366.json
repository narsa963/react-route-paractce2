{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajayn\\\\react\\\\react-route-paractice2\\\\src\\\\Pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport React, { Fragment } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Narsa',\n  text: 'Learing React is great !'\n}, {\n  id: 'q2',\n  author: 'Ajay',\n  text: 'Learing React is fun..'\n}];\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  console.log(quote);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"LoadComments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetails, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/ajayn/react/react-route-paractice2/src/Pages/QuoteDetails.js"],"names":["useParams","Route","Link","useRouteMatch","React","Fragment","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetails","params","match","quote","find","quoteId","console","log","path","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAGA,MAAMC,YAAY,GAAE,CAChB;AAACC,EAAAA,EAAE,EAAC,IAAJ;AAAUC,EAAAA,MAAM,EAAC,OAAjB;AAA0BC,EAAAA,IAAI,EAAC;AAA/B,CADgB,EAEhB;AAACF,EAAAA,EAAE,EAAC,IAAJ;AAAUC,EAAAA,MAAM,EAAC,MAAjB;AAAyBC,EAAAA,IAAI,EAAC;AAA9B,CAFgB,CAApB;;AAKA,MAAMC,YAAY,GAAE,MAAK;AAAA;;AACrB,QAAMC,MAAM,GAAEb,SAAS,EAAvB;AACA,QAAMc,KAAK,GAAGX,aAAa,EAA3B;AAEA,QAAMY,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACN,EAAN,KAAaI,MAAM,CAACI,OAA/C,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,MAAG,CAACA,KAAJ,EAAU;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AACD,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEI,KAAK,CAACM,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEN,KAAK,CAACO,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEP,KAAK,CAACM,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAxBD;;GAAMR,Y;UACYZ,S,EACAG,a;;;KAFZS,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport React, { Fragment } from \"react\";\r\nimport Comments from \"../components/comments/Comments\"\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\n\r\n\r\nconst DUMMY_QUOTES =[\r\n    {id:'q1', author:'Narsa', text:'Learing React is great !'},\r\n    {id:'q2', author:'Ajay', text:'Learing React is fun..'}\r\n\r\n]\r\nconst QuoteDetails =() =>{\r\n    const params =useParams();\r\n    const match = useRouteMatch();\r\n\r\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\r\n    console.log(quote)\r\n    if(!quote){\r\n        return(\r\n            <p>No Quote Found</p>\r\n        )\r\n    }\r\n    return(\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author={quote.author}/>\r\n            <Route path={match.path} exact>\r\n            <div className=\"centered\">\r\n              <Link className=\"btn--flat\" to={`${match.url}/comments`} >LoadComments</Link>\r\n            </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n              <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    )   \r\n}\r\nexport default QuoteDetails;"]},"metadata":{},"sourceType":"module"}